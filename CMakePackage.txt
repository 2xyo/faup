set(CPACK_PACKAGE_NAME "Faup")
set(CPACK_PACKAGE_RELEASE 1)
set(CPACK_PACKAGE_CONTACT "Sebastien Tricaud")
set(CPACK_PACKAGE_VENDOR "Sebastien Tricaud")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Faup - Finally An Url Parser!")
set(CPACK_PACKAGE_VERSION "${FAUP_VERSION_MAJOR}.${FAUP_VERSION_MINOR}.0")
set(CPACK_PACKAGE_VERSION_MAJOR "${FAUP_VERSION_MAJOR}")
set(CPACK_PACKAGE_VERSION_MINOR "${FAUP_VERSION_MINOR}")
set(CPACK_PACKAGE_VERSION_PATCH "0")
#set(CPACK_PACKAGE_INSTALL_DIRECTORY "Faup")
set(CPACK_PACKAGING_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX})

set(CPACK_RESOURCE_FILE_LICENSE "${faup-project_SOURCE_DIR}/src/LICENSE.txt")
set(CPACK_RESOURCE_FILE_README "${faup-project_SOURCE_DIR}/src/README.txt")

set(CPACK_SET_DESTDIR ON)

if(${LINUX_DIST} MATCHES "debian")
	set(CPACK_GENERATOR "DEB")
	set(CPACK_DEBIAN_PACKAGE_MAINTAINER "Sebastien Tricaud")
	set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_PACKAGE_RELEASE}.${CMAKE_SYSTEM_PROCESSOR}")
	set(CPACK_SET_DESTDIR OFF)
	if(${LUA51_FOUND})
		set(CPACK_DEBIAN_PACKAGE_DEPENDS "liblua5.1-0")
	endif()
endif()


if(${LINUX_DIST} MATCHES "redhat")
	set(CPACK_GENERATOR "RPM")
	set(CPACK_SET_DESTDIR OFF)
endif()

set(CPACK_COMPONENTS_ALL Applications Libraries Headers)

# This must always be last!
include(CPack)
